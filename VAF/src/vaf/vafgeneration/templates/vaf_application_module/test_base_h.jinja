{% extends "common/h_file_base.jinja" %}

{% block includes %}
#include <memory>
#include "vaf/controller_interface.h"

{% set includes = interfaces | map(attribute="include") | unique %}
{% for i in includes %}
{{ i }}
{% endfor %}
{% endblock %}

{% block content %}
class {{ app_module.Name }}Base {
 public:
  struct ConstructorToken {
    {% for i in interfaces %}
    std::shared_ptr<{{ i["type"] }}> {{ i["instance"] }}_;
    {% endfor %}
  };

  {{ app_module.Name }}Base(ConstructorToken&& token);
  virtual ~{{ app_module.Name }}Base() = default;

  void ReportError(vaf::ErrorCode, std::string, bool) {}
  virtual void OnError(const vaf::Error&) {}
  std::string GetName() { return ""; }

  {%for r in app_module.Tasks %}
  virtual void {{ r.Name }}() = 0;
  {% endfor %}

 protected:
  {% for i in interfaces %}
  std::shared_ptr<{{ i["type"] }}> {{ i["instance"] }}_;
  {% endfor %}
};
{% endblock %}

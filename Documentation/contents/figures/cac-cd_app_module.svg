<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="142px" preserveAspectRatio="none" style="width:561px;height:142px;" version="1.1" viewBox="0 0 561 142" width="561px" zoomAndPan="magnify"><defs><filter height="300%" id="f1fl6fd102rlbu" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[26e2a85c06611372298526764170fca9]
class ApplicationModule--><rect fill="#FFFFFF" filter="url(#f1fl6fd102rlbu)" height="124.8281" id="ApplicationModule" style="stroke: #A80036; stroke-width: 1.5;" width="543" x="7" y="7"/><ellipse cx="217.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M220.2188,28.6406 Q219.6406,28.9375 219,29.0781 Q218.3594,29.2344 217.6563,29.2344 Q215.1563,29.2344 213.8281,27.5938 Q212.5156,25.9375 212.5156,22.8125 Q212.5156,19.6875 213.8281,18.0313 Q215.1563,16.375 217.6563,16.375 Q218.3594,16.375 219,16.5313 Q219.6563,16.6875 220.2188,16.9844 L220.2188,19.7031 Q219.5938,19.125 219,18.8594 Q218.4063,18.5781 217.7813,18.5781 Q216.4375,18.5781 215.75,19.6563 Q215.0625,20.7188 215.0625,22.8125 Q215.0625,24.9063 215.75,25.9844 Q216.4375,27.0469 217.7813,27.0469 Q218.4063,27.0469 219,26.7813 Q219.5938,26.5 220.2188,25.9219 L220.2188,28.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="237.75" y="27.1543">ApplicationModule</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="549" y1="39" y2="39"/><ellipse cx="18" cy="50" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="27" y="53.2104">app_module: vafmodel.ApplicationModule</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="549" y1="59.8047" y2="59.8047"/><ellipse cx="18" cy="70.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="27" y="74.0151">ApplicationModule(name: str, namespace: str)</text><ellipse cx="18" cy="83.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="517" x="27" y="86.8198">add_consumed_interface(instance_name: str, interface: ModuleInterface, is_optional: bool)</text><ellipse cx="18" cy="96.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="27" y="99.6245">add_provided_interface(instance_name: str, interface: ModuleInterface)</text><ellipse cx="18" cy="109.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="27" y="112.4292">add_task(task: Task)</text><ellipse cx="18" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="27" y="125.2339">add_task_chain(tasks: list[Task], run_after: list[Task], increment_preferred_offset: bool)</text><!--MD5=[1fa8aaa55da906cb5ff357c85d69ad90]
@startuml cac-cd_app_module
skinparam  class {
    BackgroundColor  #FFFFFF
}

class ApplicationModule {
    + app_module: vafmodel.ApplicationModule
    + ApplicationModule(name: str, namespace: str)
    + add_consumed_interface(instance_name: str, interface: ModuleInterface, is_optional: bool)
    + add_provided_interface(instance_name: str, interface: ModuleInterface)
    + add_task(task: Task)
    + add_task_chain(tasks: list[Task], run_after: list[Task], increment_preferred_offset: bool)
}
@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.26+4-post-Ubuntu-1ubuntu122.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>
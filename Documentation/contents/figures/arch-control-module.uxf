<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>3</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>849</x>
      <y>147</y>
      <w>192</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
vaf::ControlInterface
--
#name_: std::string
#dependencies_: std::vector&lt;std::string&gt; 
#executable_controller_interface_: ExecutableControllerInterface&amp;
#executor_: vaf::ModuleExecutor
--
/+Init(): vaf::Result&lt;void&gt; /
/+Start() noexcept/
/+Stop() noexcept/
/+DeInit() noexcept/
+ReportOperational()
+ReportError(error_code: ErrorCode , msg: std::string , critical: bool = false)
/+OnError(error: const vaf::Error&amp;)/
+GetName(): std::string
+GetDependencies(): std::vector&lt;std::string&gt; 
+StartExecutor()
+StopExecutor()
/+StartEventHandlerForModule(module_name: const std::string&amp;)/
/+StopEventHandlerForModule(module_name: const std::string&amp; )/
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>507</x>
      <y>165</y>
      <w>156</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
vaf::ExecutableControllerInterface
--

--
/+ReportOperationalOfModule(std::string name)/
/+ReportErrorOfModule(vaf::Error error, std::string name, bool critical)/
bg=yellow
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>660</x>
      <y>192</y>
      <w>195</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses</panel_attributes>
    <additional_attributes>10.0;20.0;630.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>678</x>
      <y>165</y>
      <w>60</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>For ReportOperational() and ReportError()
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>735</x>
      <y>177</y>
      <w>27</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=-
</panel_attributes>
    <additional_attributes>70.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>582</x>
      <y>210</y>
      <w>9</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>681</x>
      <y>228</y>
      <w>123</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>&lt;&lt;private to vaf::ExecutableControllerBase&gt;&gt;
vaf::ExecutableControllerBase::ModuleContainer
--
+name_: std::string
+module_: std::shared_ptr&lt;vaf::ControlInterface&gt;
+dependencies_: std::vector&lt;std::string&gt;
+state_: ModuleStates
+starting_counter_: uint64_t
--



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>801</x>
      <y>228</y>
      <w>54</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses</panel_attributes>
    <additional_attributes>160.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>654</x>
      <y>243</y>
      <w>33</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses</panel_attributes>
    <additional_attributes>90.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>483</x>
      <y>231</y>
      <w>174</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>vaf::ExecutableControllerBase
--
-signal_handling_init_: int
-runtime_: vaf::Runtime
-shutdown_requested_: std::atomic_bool
-use_execution_mgr_: bool
-logger_: vaf::Logger&amp;
-modules_: std::vector&lt;ModuleContainer&gt;
-user_controller_: std::unique_ptr&lt;UserControllerInterface&gt;
-signal_handler_thread_: std::thread
--
+Run(use_exec_mgr: bool) noexcept;
+Run(argc: int, argv char**,use_exec_mgr bool)
+InitiateShutdown()
+RegisterModule(module: std::shared_ptr&lt;vaf::ControlInterface&gt;)
+ReportOperationalOfModule(name: std::string)
+ReportErrorOfModule(error: vaf::Error, name std::string , critical bool)
/#DoInitialize()/
/#DoStart()/
/#DoShutdown()/
#WaitForShutdown()
#IsShutdownRequested(): bool
-ChangeStateOfModule(name: std::string , state: ModuleStates )
-StartModules()
-StartEventHandlersForModule(module_name: const std::string&amp; , dependencies: const std::vector&lt;std::string&gt;&amp;)
-StopEventHandlersForModule(module_name: const std::string&amp; , dependencies const std::vector&lt;std::string&gt;&amp;)
-CheckStartingModules();
-SetupExecutionManager();
-ReportStateToExecutionManager(is_running: bool)
-InitializeSignalHandling()
-SignalHandlerThread()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>495</x>
      <y>399</y>
      <w>138</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Generated&gt;&gt;
executable_controller::ExecutableController
--
-executor_: std::unique_ptr&lt;vaf::Executor&gt; 
--
#/DoInitialize()
#/DoStart()
#/DoShutdown()
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>567</x>
      <y>375</y>
      <w>9</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>438</x>
      <y>456</y>
      <w>51</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>Class instantiated by main (entry point)
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>420</y>
      <w>21</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=-
</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>258</x>
      <y>375</y>
      <w>174</w>
      <h>93</h>
    </coordinates>
    <panel_attributes>vaf::Executor
--
-running_period_: std::chrono::milliseconds 
-runnables_: std::vector&lt;std::shared_ptr&lt;RunnableHandle&gt;&gt;
-exit_requested_: std::atomic&lt;bool&gt;
-thread_: std::thread
--
+RunPeriodic(name: const std::string&amp;, 
            period: std::chrono::milliseconds , 
            runnable: T&amp;&amp; , 
            owner: const std::string&amp;, 
            run_after: const std::vector&lt;std::string&gt;&amp; ,
            run_after_runnables: const std::vector&lt;std::string&gt;&amp;,
            offset: uint64_t,
            budget: std::chrono::nanoseconds): std::shared_ptr&lt;RunnableHandle&gt;
-ExecutorThread
-ExecuteRunnable(runnable: RunnableHandle&amp; )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>429</x>
      <y>399</y>
      <w>72</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses</panel_attributes>
    <additional_attributes>10.0;20.0;220.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>222</x>
      <y>123</y>
      <w>108</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>vaf::RunnableHandle
--
-name_: std::string;
-is_active_: bool
-period_: uint64_t
-runnable_: std::function&lt;void(void)&gt;
-owner_: std::string
-run_after_: std::vector&lt;std::string&gt;
-offset_: uint64_t
- budget_: std::chrono::nanoseconds
--
+Name(): const std::string&amp;
+IsActive(): bool
+Execute()
+Period(): uint64_t
+Start()
+Stop()
+Owner(): const std::string&amp;
+RunAfter(): const std::vector&lt;std::string&gt;&amp;
+Offset(): uint64_t
+Budget(): std::chrono::nanoseconds
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>279</x>
      <y>234</y>
      <w>18</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;470.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>351</x>
      <y>129</y>
      <w>141</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>vaf::ModuleExecutor
--
-executor_: Executor&amp;
-handles_: std::vector&lt;std::shared_ptr&lt;RunnableHandle&gt;&gt;
-started_: bool
-name_: std::string
-dependencies_ std::vector&lt;std::string&gt;
--
+Start()
+Stop()
+RunPeriodic(name: const std::string&amp;, 
            period: std::chrono::milliseconds , 
            runnable: T&amp;&amp; , 
            owner: const std::string&amp;, 
            runnable_dependencies: std::vector&lt;std::string&gt;,
            offset: uint64_t,
            budget: std::chrono::nanoseconds): std::shared_ptr&lt;RunnableHandle&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>327</x>
      <y>180</y>
      <w>30</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses</panel_attributes>
    <additional_attributes>10.0;20.0;80.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>375</x>
      <y>216</y>
      <w>18</w>
      <h>165</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses</panel_attributes>
    <additional_attributes>10.0;530.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>489</x>
      <y>147</y>
      <w>366</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses</panel_attributes>
    <additional_attributes>10.0;20.0;1200.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>498</x>
      <y>462</y>
      <w>156</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
vaf::UserControllerInterface
--

--
/+PreInitialize()/
/+PostInitialize()/
/+PreStart()/
/+PostStart()/
/+PreShutdown()/
/+PostShutdown()/
/+OnError(vaf::Error error, std::string name, bool critical)/
bg=yellow
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>645</x>
      <y>375</y>
      <w>18</w>
      <h>93</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
uses</panel_attributes>
    <additional_attributes>10.0;290.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>498</x>
      <y>543</y>
      <w>159</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Stubs Generated&gt;&gt;
UserController
--

--
+/PreInitialize()
+/PostInitialize()
+/PreStart()
+/PostStart()
+/PreShutdown()
+/PostShutdown()





bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>207</x>
      <y>105</y>
      <w>612</w>
      <h>513</h>
    </coordinates>
    <panel_attributes>Control module
--
layer=-4
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>549</x>
      <y>519</y>
      <w>9</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
</diagram>
